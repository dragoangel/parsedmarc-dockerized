version: '3.4'

services:
  parsedmarc:
    container_name: "parsedmarc"
    build:
      context: .
      dockerfile: parsedmarc/Dockerfile
    command: "parsedmarc -c /etc/parsedmarc.ini"
    tty: true
    volumes:
      - ./parsedmarc/parsedmarc.ini:/etc/parsedmarc.ini:z
      - geoipupdate_data:/usr/share/GeoIP
    restart: unless-stopped
    networks:
      - parsedmarc-network
    depends_on:
      - elasticsearch

  geoipupdate:
    container_name: geoipupdate
    image: maxmindinc/geoipupdate
    restart: unless-stopped
    environment:
      - GEOIPUPDATE_ACCOUNT_ID=
      - GEOIPUPDATE_LICENSE_KEY=
      - 'GEOIPUPDATE_EDITION_IDS=GeoLite2-ASN GeoLite2-City GeoLite2-Country'
      - GEOIPUPDATE_FREQUENCY=72
    networks:
      - geoipupdate
    volumes:
      - geoipupdate_data:/usr/share/GeoIP

  elasticsearch:
    container_name: "elasticsearch"
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.0
    environment:
      - cluster.name=parsedmarc
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data/
    restart: "unless-stopped"
    networks:
      - parsedmarc-network
    healthcheck:
      test: ["CMD", "curl","-s" ,"-f", "http://localhost:9200/_cat/health"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 30s

  kibana:
    container_name: "kibana"
    image: docker.elastic.co/kibana/kibana:7.17.0
    environment:
      SERVER_NAME: parsedmarc
      SERVER_HOST: "0.0.0.0"
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: "true"
    restart: unless-stopped
    networks:
      - parsedmarc-network
    depends_on:
      - elasticsearch

  nginx:
    container_name: "nginx"
    build:
      context: .
      dockerfile: nginx/Dockerfile
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d/:/etc/nginx/conf.d/:z
      - acme_certs:/etc/nginx/ssl/
      - nginx_secrets:/etc/nginx-secrets
    networks:
      - parsedmarc-network

  acme.sh:
    image: neilpang/acme.sh
    container_name: acme.sh
    command: daemon
    volumes:
      - acmeout:/acme.sh
      - acme_certs:/installed_certs
    environment:

      # CloudFlare
      - CF_Token=
      - CF_Account_ID=
      - CF_Zone_ID=
networks:
    parsedmarc-network:
      driver: bridge
    geoipupdate:

volumes:
  acmeout:
  elasticsearch_data:
  geoipupdate_data:
  acme_certs:
  nginx_secrets:
